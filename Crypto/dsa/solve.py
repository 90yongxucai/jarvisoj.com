#!/usr/bin/env python3

# DSA public key
g = 53955759259506195629370221955882028602129565196710167480649056988330906117971891319360466002581132965581793497788773734702624458318101767983345305577358509640139391448262692595149152168335401138516115001646783546740429454038931813085439969488499666706724464185937932560157850845046285161405028860099711467897
q = 768204286206312924745826772404361572053995803069
p = 135072277349986231918767318777496371552998523256306836680207886328250469140725070958493165166375742776776188095739453689162118072119637932393028705045785456135605269009498175908369054264845986650254461451778502410559449967848738173219539609196568432769555817217073171835795353828043869976253611672766967842971
y = 48966667837013414801031811810642280772647236378744040304912885467993823167141281755249027785686488654582548005766785141294865650644124270468685164456792976944411071341740863520743350743985636739430430553599637295250998469649774667076175577773243724165204009991562726052681112720456820018391695334506416243823

# hashes (m) and signatures (r, s)
packet1 = {
    'm' : 0x7fc1806f61a1a06346a4a1b784dfbcc8906d413d,
    'r' : 0x8158B477C5AA033D650596E93653C730D26BA409,
    's' : 0x165B9DD1C93230C31111E5A4E6EB5181F990F702
}

packet2 = {
    'm' : 0x46ea25f6c5621195fe29e49027cccf10bcb643bf,
    'r' : 0x60B9F2A5BA689B802942D667ED5D1EED066C5A7F,
    's' : 0x3DC8921BA26B514F4D991A85482750E0225A15B5
}

packet3 = {
    'm' : 0xc188b855c50a1b8247a8d1faf5f5ec3a8983c0ce,
    'r' : 0x5090DA81FEDE048D706D80E0AC47701E5A9EF1CC,
    's' : 0x30EB88E6A4BFB1B16728A974210AE4E41B42677D
}

packet4 = {
    'm' : 0xa54e8c02fa296b42b67ecda5afc1742cd2d59666,
    'r' : 0x5090DA81FEDE048D706D80E0AC47701E5A9EF1CC,
    's' : 0x5E10DED084203CCBCEC3356A2CA02FF318FD4123
}


def DSAVerify(m, r, s):
    w = pow(s, q - 2, q)
    u1 = m * w % q
    u2 = r * w % q
    v = (pow(g, u1, p) * pow(y, u2, p) % p) % q
    return v == r

assert(DSAVerify(packet1['m'], packet1['r'], packet1['s']))
assert(DSAVerify(packet2['m'], packet2['r'], packet2['s']))
assert(DSAVerify(packet3['m'], packet3['r'], packet3['s']))
assert(DSAVerify(packet4['m'], packet4['r'], packet4['s']))

# the problem comes from packet3 and packet4, 
# both 'r' is the same.

# delta_s = k^ -1 * (m3 - m4) % q
#         = k^ -1 * delta_m % q
delta_s = (packet3['s'] - packet4['s']) % q
delta_m = (packet3['m'] - packet4['m']) % q

# k = delta_m / delta_s % q
k = delta_m * pow(delta_s, q - 2, q) % q

# packet3['s'] * k = (packet3['m'] + x * r) % q
sk = packet3['s'] * k % q

# packet3['s'] * k - packet3['m'] = x * r % q
sk_m = (sk - packet3['m']) % q

# (packet3['s'] * k - packet3['m']) / r = x % q
x = sk_m * pow(packet3['r'], q - 2, q) % q
assert(y == pow(g, x, p))

print('CTF{%d}' % x)
